{"version":3,"sources":["components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","props","useState","username","setUsername","password","setPassword","processing","setProcessing","initialState","grant_type","client_id","onSubmit","a","console","log","location","search","login","headers","axios","url","method","data","qs","stringify","responseType","then","response","toast","success","position","POSITION","BOTTOM_CENTER","catch","error","error_description","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","Segment","Input","fluid","icon","iconPosition","placeholder","value","onChange","e","target","type","Button","loading","disabled","App","className","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wVA8FeA,EAvFG,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACpBC,EADoB,KACVC,EADU,OAEKF,mBAAS,IAFd,mBAEpBG,EAFoB,KAEVC,EAFU,OAGSJ,oBAAS,GAHlB,mBAGpBK,EAHoB,KAGRC,EAHQ,KAKrBC,EAEG,CACLN,SAAU,GACVE,SAAU,GACVK,WAAY,WACZC,UAAW,yBAITC,EAAQ,uCAAG,8BAAAC,EAAA,6DACfL,GAAc,GACdM,QAAQC,IAAI,sBAAuBd,EAAMe,SAASC,SAI1CC,EAAUT,GACZN,SAAWA,EACjBe,EAAMb,SAAWA,EACjBa,EAAMR,WAAa,WACnBQ,EAAMP,UAAY,wBAEZQ,EAAU,CAAE,eAAgB,qCAZnB,UAcTC,IAAM,CACVC,IACE,uGACFC,OAAQ,OACRC,KAAMC,IAAGC,UAAUP,GACnBC,QAASA,EACTO,aAAc,SAEbC,MAAK,SAACC,GACLd,QAAQC,IAAIa,GACZpB,GAAc,GAEdqB,IAAMC,QAAQ,gBAAiB,CAAEC,SAAUF,IAAMG,SAASC,mBAE3DC,OAAM,SAACC,GACNrB,QAAQC,IAAIoB,EAAMP,UAClBpB,GAAc,GACdqB,IAAMM,MAAMA,EAAMP,SAASL,KAAKa,kBAAmB,CACjDL,SAAUF,IAAMG,SAASC,mBAhChB,4CAAH,qDAoCd,OACE,cAACI,EAAA,EAAD,CAAMC,UAAU,SAASC,MAAO,CAAEC,OAAQ,SAAWC,cAAc,SAAnE,SACE,eAACJ,EAAA,EAAKK,OAAN,CAAaH,MAAO,CAAEI,SAAU,KAAhC,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAM,OAAOR,UAAU,SAAvC,oCAGA,cAACS,EAAA,EAAD,CAAMC,KAAK,QAAQpC,SAAUA,EAA7B,SACE,eAACqC,EAAA,EAAD,WACE,cAACF,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZC,MAAOpD,EACPqD,SAAU,SAACC,GAAD,OAAOrD,EAAYqD,EAAEC,OAAOH,UAExC,cAACR,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZK,KAAK,WACLJ,MAAOlD,EACPmD,SAAU,SAACC,GAAD,OAAOnD,EAAYmD,EAAEC,OAAOH,UAGxC,cAACK,EAAA,EAAD,CAAQd,MAAM,OAAOK,OAAK,EAACH,KAAK,QAAQa,QAAStD,EAAYuD,SAAUvD,EAAvE,8B,yBCnEGwD,MAXf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWlE,MAE7B,cAAC,IAAD,QCASmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.61686bff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Button, Form, Grid, Header, Segment } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst LoginForm = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const initialState = {\r\n    user: \"\",\r\n    login: {\r\n      username: \"\",\r\n      password: \"\",\r\n      grant_type: \"password\",\r\n      client_id: \"filconnect-management\",\r\n    },\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    setProcessing(true);\r\n    console.log(\"Device ID from URL:\", props.location.search);\r\n\r\n    // Process Login using authentication service\r\n\r\n    const { login } = initialState;\r\n    login.username = username;\r\n    login.password = password;\r\n    login.grant_type = \"password\";\r\n    login.client_id = \"filconnect-management\";\r\n\r\n    const headers = { \"Content-Type\": \"application/x-www-form-urlencoded\" };\r\n\r\n    await axios({\r\n      url:\r\n        \"http://acclab.ph:9090/auth/realms/5D227A3E-F36B-1410-8BEB-0003021A1292/protocol/openid-connect/token\",\r\n      method: \"POST\",\r\n      data: qs.stringify(login),\r\n      headers: headers,\r\n      responseType: \"json\",\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setProcessing(false);\r\n\r\n        toast.success(\"Login Success\", { position: toast.POSITION.BOTTOM_CENTER });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        setProcessing(false);\r\n        toast.error(error.response.data.error_description, {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n          Log-in to your account\r\n        </Header>\r\n        <Form size=\"large\" onSubmit={onSubmit}>\r\n          <Segment>\r\n            <Form.Input\r\n              fluid\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            <Button color=\"teal\" fluid size=\"large\" loading={processing} disabled={processing}>\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import \"./App.css\";\nimport LoginForm from \"./components/LoginForm\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" component={LoginForm} />\n      </Router>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}